syntax = "proto3";

package example_crud.entity.kv;

message Key {
  string id = 1;
}

message Value {
  string data = 1;
}

message KeyValue {
  // Rappresenta un'entità Key/Value
  // Il campo "key" è obbligatorio, mentre il campo "value" è opzionale
  Key key = 1 [required=true];
  Value value = 2;
}

// ---

message CreateRequest {
  KeyValue entity = 1;
}

message ReadRequest {
  Key key = 1;
}

message UpdateRequest {
  KeyValue entity = 1;
}

message DeleteRequest {
  Key key = 1;
}

// ---

message Successful {
  bool success = 1;
}

message CreateResponse {
  // Indica se l'operazione di creazione è riuscita o meno
  Successful success = 1;
  // Restituisce la key dell'entità creata
  Key key = 2;
}

message ReadResponse {
  // Indica se l'operazione di lettura è riuscita o meno
  Successful success = 1;
  // Restituisce l'entità letta
  KeyValue entity = 2;
}

message UpdateResponse {
  // Indica se l'operazione di aggiornamento è riuscita o meno
  Successful success = 1;
  // Restituisce il valore aggiornato dell'entità
  Value value = 2;
}

message DeleteResponse {
  // Indica se l'operazione di eliminazione è riuscita o meno
  Successful success = 1;
}

// ---

service KeyValueService {
  // Crea una nuova entità Key/Value
  // Restituisce una risposta che indica se l'operazione è riuscita o meno e l'entità creata
  rpc Create(CreateRequest) returns (CreateResponse);

  // Legge l'entità Key/Value con l'id specificato nel campo "id" del message "Key"
  // Restituisce una risposta che indica se l'operazione è riuscita o meno e l'entità letta
  rpc Read(ReadRequest) returns (ReadResponse);

  // Aggiorna l'entità Key/Value con i dati specificati nel message "KeyValue"
  // Restituisce una risposta che indica se l'operazione è riuscita o meno e l'entità aggiornata
  rpc Update(UpdateResponse) returns (UpdateResponse);

  // Elimina l'entità Key/Value con l'id specificato nel campo "id" del message "Key"
  // Restituisce una risposta che indica se l'operazione è riuscita o meno
  rpc Delete(DeleteRequest) returns (DeleteResponse);
}
